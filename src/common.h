#include <stdint.h>

#define INPUT_WIDTH_SRCNN 400
#define INPUT_HEIGHT_SRCNN 266

#define CONV1_KERNEL_SIZE 9
#define CONV1_IN_CHANNELS 1
#define CONV1_OUT_CHANNELS 64
#define CONV1_WEIGHTS_SIZE (CONV1_OUT_CHANNELS * CONV1_IN_CHANNELS * CONV1_KERNEL_SIZE * CONV1_KERNEL_SIZE)

#define CONV2_KERNEL_SIZE 5
#define CONV2_IN_CHANNELS 64
#define CONV2_OUT_CHANNELS 32
#define CONV2_WEIGHTS_SIZE (CONV2_OUT_CHANNELS * CONV2_IN_CHANNELS * CONV2_KERNEL_SIZE * CONV2_KERNEL_SIZE)

#define CONV3_KERNEL_SIZE 5
#define CONV3_IN_CHANNELS 32
#define CONV3_OUT_CHANNELS 1
#define CONV3_WEIGHTS_SIZE (CONV3_OUT_CHANNELS * CONV3_IN_CHANNELS * CONV3_KERNEL_SIZE * CONV3_KERNEL_SIZE)

#define CONV1_OUT_WIDTH (INPUT_WIDTH_SRCNN - CONV1_KERNEL_SIZE + 1)
#define CONV1_OUT_HEIGHT (INPUT_HEIGHT_SRCNN - CONV1_KERNEL_SIZE + 1)
#define CONV1_OUTPUT_SIZE (CONV1_OUT_WIDTH * CONV1_OUT_HEIGHT * CONV1_OUT_CHANNELS)

#define CONV2_OUT_WIDTH (CONV1_OUT_WIDTH - CONV2_KERNEL_SIZE + 1)
#define CONV2_OUT_HEIGHT (CONV1_OUT_HEIGHT - CONV2_KERNEL_SIZE + 1)
#define CONV2_OUTPUT_SIZE (CONV2_OUT_WIDTH * CONV2_OUT_HEIGHT * CONV2_OUT_CHANNELS)

#define CONV3_OUT_WIDTH (CONV2_OUT_WIDTH - CONV3_KERNEL_SIZE + 1)
#define CONV3_OUT_HEIGHT (CONV2_OUT_HEIGHT - CONV3_KERNEL_SIZE + 1)
#define CONV3_OUTPUT_SIZE (CONV3_OUT_WIDTH * CONV3_OUT_HEIGHT * CONV3_OUT_CHANNELS)

#define INPUT_SIZE1 (INPUT_WIDTH_SRCNN * INPUT_HEIGHT_SRCNN * CONV1_IN_CHANNELS)
#define INPUT_SIZE2 CONV1_OUTPUT_SIZE
#define INPUT_SIZE3 CONV2_OUTPUT_SIZE

#define OUTPUT_MAX CONV1_OUTPUT_SIZE
#define INPUT_MAX INPUT_SIZE2
#define WEIGHTS_MAX CONV2_WEIGHTS_SIZE
#define BIASES_MAX CONV1_OUT_CHANNELS
#define KERNEL_SIZE_MAX CONV1_KERNEL_SIZE

#define PERFORM_RELU 1
#define DONT_PERFORM_RELU 0

#define NB_PARAMETERS 8

#define NB_DPUS 64

#define SCALING_FACTOR 1000.0f
#define QUANTIZATION_BUFFER_SIZE 32

#define ROUND_UP_TO_MULTIPLE_OF_8(x)    ((((x) + 7)/8)*8)



// Define structures for the convolutional layers
typedef struct {
    int in_channels;
    int out_channels;
    int kernel_size;
    int padding;
    float* weights;
    float* bias;
} ConvLayer;

// Define the SRCNN model structure
typedef struct {
    ConvLayer conv1;
    ConvLayer conv2;
    ConvLayer conv3;
} SRCNN;